title Place Component

participant OtherClients
participant Client
participant Server
participant Game
participant Player
participant Spaceship
participant BuildingBoard

alt PlaceHandComponentAndPickHiddenComponent
  Client->Server:PlaceHandComponentAndPickVisibleComponentMessage(x,y,r)
  Server->Player: player
  Player->Spaceship: getSpaceship()
  Spaceship->BuildingBoard:getBuildingBoard()
  
  BuildingBoard->BuildingBoard: placeComponent(y,x,r)
  
  alt PlacedComponent
    BuildingBoard->Component: getImgSrc()
    OtherClients<-Server: sendMessageToOtherPlayersInGame(name, x, y, r, imgSrc)

    Server->Game: PickHiddenComponent(player)
    Game->Game: removeFromDeckComponent(randomPos)
    Game->Player:
    Player->Spaceship:getSpaceship()
    Spaceship->BuildingBoard:getBuildingBoard()
    BuildingBoard->BuildingBoard: setHandComponent(pickedComponent)
    BuildingBoard->Component:getImgSrc()

    Server->Client: PickedComponentMessage(imgSrcComponent)
  else ImpossiblePlaceComponent
    Client<-Server: "ImpossiblePlaceComponent"
  end


else PlaceHandComponentAndPickVisibleComponent

  Client->Server:PlaceHandComponentAndPickVisibleComponentMessage(x,y,r)
  Server->Player: player
  Player->Spaceship: getSpaceship()
  Spaceship->BuildingBoard:getBuildingBoard()

  BuildingBoard->BuildingBoard: placeComponent(y,x,r)

  alt PlacedComponent
    BuildingBoard->Component: getImgSrc()
    OtherClients<-Server: sendMessageToOtherPlayersInGame(name, x, y, r, imgSrc)

    Server->Game: PickVisibleComponent(player, idxVisibleComponent)
    Game->Game: removeFromVisibleDeckComponent(idxVisibleComponent)
    Game->Player:
    Player->Spaceship:getSpaceship()
    Spaceship->BuildingBoard:getBuildingBoard()
    BuildingBoard->BuildingBoard: setHandComponent(pickedComponent)
    BuildingBoard->Component:getImgSrc()

    Server->Client: PickedComponentMessage(imgSrcComponent)
  else ImpossiblePlaceComponent
    Client<-Server: "ImpossiblePlaceComponent"
  end

else PlaceHandComponentAndPickBookedComponent

  Client->Server:PlaceHandComponentAndPickBookedComponentMessage(x,y,r, idx)
  Server->Player: player
  Player->Spaceship: getSpaceship()
  Spaceship->BuildingBoard:getBuildingBoard()

  BuildingBoard->BuildingBoard: placeComponent(y,x,r)

  alt PlacedComponent
    BuildingBoard->Component: getImgSrc()
    OtherClients<-Server: sendMessageToOtherPlayersInGame(name, x, y, r, imgSrc)

    Server->Player:
    Player->Spaceship:getSpaceship()
    Spaceship->BuildingBoard:getBuildingBoard()
    BuildingBoard->BuildingBoard: pickBookedComponent(idx)
    BuildingBoard->Component:getImgSrc()

    Server->Client: PickedComponentMessage(imgSrcComponent)
  else ImpossiblePlaceComponent
    Client<-Server: "ImpossiblePlaceComponent"
  end
end

else PlaceHandComponentAndShowEventCardDeck

  Client->Server:PlaceHandComponentAndShowEventCardDeckMessage(x,y,r,idx)
  Server->Player: player
  Player->Spaceship: getSpaceship()
  Spaceship->BuildingBoard:getBuildingBoard()

  BuildingBoard->BuildingBoard: placeComponent(y,x,r)

  alt PlacedComponent
    BuildingBoard->Component: getImgSrc()
    OtherClients<-Server: sendMessageToOtherPlayersInGame(name, x, y, r, imgSrc)

    Server->Game:getEventCardDeck(player, idx)

    #and?

    Server->Client: DataEventCardDeckMessage(imgSrcCards[])
  else ImpossiblePlaceComponent
    Client<-Server: "ImpossiblePlaceComponent"
  end
end
space
note over Client, Server: Player decides to place the current component in a specic cell on the matrix.\nClient sends in first component's coordinates, then its rotation.\nServer will answer with a success/fail response.